# # Prezto {{{
# if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
#     source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
# fi
# # }}}


# Aliases {{{
alias python='python3'

alias rm='echo "This is not the command you are looking for."; false'


alias etd='nvim /home/mike/Dropbox/todo/todo.txt'
alias ez='nvim ~/.zshrc'
alias sz='source ~/.zshrc'
alias ezp='nvim ~/.zpreztorc'
alias ev='nvim ~/.vimrc'
alias et='nvim ~/.tmux.conf'
alias en='nvim ~/.config/nvim/init.vim'
alias eg='nvim ~/.gitconfig'

alias json="python -m json.tool"
alias yaml="js-yaml"

alias tmux="TERM=screen-256color-bce tmux"
alias mktmp='mktmpenv --no-cd'
alias cdg='cd $(git rev-parse --show-toplevel)'
alias tagit='ctags -R --exclude=.git --exclude=log *'
alias fs='. fzf-fs'

alias galias='git config --get-regexp alias'

alias -g H='| head'
alias -g T='| tail'
alias -g A='| ag'
alias -g L="| less"
alias -g F="| fzf"

alias create_flask_project='cookiecutter https://github.com/sloria/cookiecutter-flask.git'
alias create_python_project='cookiecutter https://github.com/audreyr/cookiecutter-pypackage.git'

alias -g P='| path-extractor | fzf | read filename; [ ! -z $filename ] && nvim $filename'

bindkey "^y" _fuzzybrowse_zsh_insert_output
# }}}


# Functions {{{
# Pygmentized Less
function cless () {
    pygmentize -gf terminal "$1" | less -R
}

# Write to requirements with pip
function pipr() {
    if [ "$1" == "install" ]; then
        pip $1 $2
        pip freeze | grep -i $2 >> requirements.txt
        echo ok, added $2 as:
        tail -n1 requirements.txt
    fi
    if [ "$1" == "uninstall" ]; then
        echo y | pip $1 $2 >> .pipremoved
        grep -i "successfully uninstalled" .pipremoved | grep -o -i $2 >> requirements.removed
        cp requirements.txt requirements.bak
        tail -n1 requirements.removed | xargs -I{}  grep -v {} requirements.bak > requirements.txt
        echo ok, removed:
        tail -n1 requirements.removed
        rm .pipremoved >/dev/nul
    fi
}

# Scratch directory
function new-scratch {
    cur_dir="$HOME/scratch"
    new_dir="$HOME/tmp/scratch-`date +'%s'`"
    mkdir -p $new_dir
    ln -nfs $new_dir $cur_dir
    cd $cur_dir
    echo "New scratch dir ready for grinding ;>"
}

alias ns="new-scratch $HOME"

# todo.txt
function t() {
    if [ $# -eq 0 ]; then
        todo.sh ls
    else
        todo.sh $*
    fi
}

# Interactive directory selection
function zs() {
    local dir
    dir=$(fasd -Rdl |\
        sed "s:$HOME:~:" |\
        fzf --no-sort +m -q "$*" |\
        sed "s:~:$HOME:")\
        && pushd "$dir"
}

# Interactive directory selection with find to list subdirectories.
function zd() {
    local dir
    dir=$(find ${1:-*} -path '*/\.*'\
        -prune -o -type d\
        -print 2> /dev/null | fzf +m)
    [ -d "$dir" ] && pushd "$dir"
}

# Interactive directory selection of selected file
function zf() {
    local file
    local dir
    file=$(fzf +m -q "$1")\
        && dir=$(dirname "$file")
    [ -d "$dir" ] && pushd "$dir"
}
# }}}


# Plugins {{{

source ~/.zplug/init.zsh
zplug "sorin-ionescu/prezto", as:plugin, use:init.zsh, nice:2, hook-build:"ln -s $ZPLUG_HOME/repos/sorin-ionescu/prezto ~/.zprezto"

zplug "sorin-ionescu/prezto", as:plugin, use:init.zsh,\
    hook-build:"ln -s $ZPLUG_HOME/repos/sorin-ionescu/prezto  ${ZDOTDIR:-$HOME}/.zprezto"

zstyle ':prezto:*:*' case-sensitive 'no'
zstyle ':prezto:*:*' color 'yes'
zstyle ':prezto:load' pmodule \
    'environment' \
    'terminal' \
    'editor' \
    'history' \
    'directory' \
    'spectrum' \
    'utility' \
    'completion' \
    'prompt'\
    # 'syntax-highlighting' \
    # 'history-substring-search' \
    'git' \
    'dpkg' \
    'tmux' \
    'autosuggestions' \
zstyle ':prezto:module:autosuggestions' color 'yes'
zstyle ':prezto:module:autosuggestions:color' found 'fg=8'
zstyle ':prezto:module:editor' key-bindings 'emacs'
zstyle ':prezto:module:editor' dot-expansion 'yes'
zstyle ':prezto:module:history-substring-search:color' found ''
zstyle ':prezto:module:history-substring-search:color' not-found ''
zstyle ':prezto:module:history-substring-search' globbing-flags ''
zstyle ':prezto:module:prompt' theme 'nicoulaj'
zstyle ':prezto:module:ssh:load' identities 'id_rsa' 'id_rsa2' 'id_github'
# zstyle ':prezto:module:syntax-highlighting' color 'yes'
# zstyle ':prezto:module:syntax-highlighting' highlighters \
    # 'main' \
    # 'brackets' \
    # 'pattern' \
    # 'line' \
    # 'cursor' \
    # 'root'
# if [[ "$(tput colors)" == "256"  ]]; then
    # zstyle ':prezto:module:syntax-highlighting' styles \
        # 'alias'                  'fg=26'               \
        # 'builtin'                'fg=26'               \
        # 'command'                'fg=26'               \
        # 'commandseparator'       'fg=45'               \
        # 'default'                'fg=45'               \
        # 'double-hyphen-option'   'fg=39'               \
        # 'double-quoted-argument' 'fg=45'               \
        # 'function'               'fg=26'               \
        # 'globbing'               'fg=39,bold'          \
        # 'hashed-command'         'fg=26'               \
        # 'history-expansion'      'fg=39'               \
        # 'path'                   'fg=39'               \
        # 'precommand'             'fg=36'               \
        # 'reserved-word'          'fg=36'               \
        # 'single-hyphen-option'   'fg=39'               \
        # 'single-quoted-argument' 'fg=45'
# fi
# zstyle ':prezto:module:terminal' auto-title 'no'
# zstyle ':prezto:module:terminal:window-title' format '%n@%m: %s'
# zstyle ':prezto:module:terminal:tab-title' format '%m: %s'
zstyle ':prezto:module:tmux:auto-start' local 'yes'
# zstyle ':prezto:module:tmux:auto-start' remote 'yes'
zstyle ':prezto:module:git:log:context' format 'brief'
zstyle ':prezto:module:git:status:ignore' submodules 'all'
zplug "zplug/zplug"
zplug "supercrabtree/k"
zplug "djui/alias-tips"
zplug "unixorn/git-extra-commands"
zplug "junegunn/fzf-bin", from:gh-r, as:command, rename-to:fzf
zplug "junegunn/fzf", rename-to:fzf-completion, use:shell/completion.zsh
zplug "junegunn/fzf", as:command, rename-to:fzf-tmux, use:bin/fzf-tmux
zplug "atweiden/fzf-extras", use:fzf-extras.sh
zplug "so-fancy/diff-so-fancy", as:command, use:diff-so-fancy
zplug "mollifier/cd-gitroot"

zplug load --verbose

# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# [ -f ~/.fzf-extras/fzf-extras.zsh ] && source ~/.fzf-extras/fzf-extras.zsh
# [ -f ~/.alias-tips/alias-tips.plugin.zsh ] && source ~/.alias-tips/alias-tips.plugin.zsh
# [ -f ~/.k.zsh/k.sh ] && source ~/.k.zsh/k.sh

# [ -f ~/.autoenv/activate.sh ] && source ~/.autoenv/activate.sh
# [ -f ~/src/todo.txt_cli-2.9/todo_completion ] && source ~/src/todo.txt_cli-2.9/todo_completion
# [ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh
fpath=($HOME/.zsh-completions/src $fpath)

eval "$(hub alias -s)"
eval "$(fasd --init auto)"

# fasd
alias z='fasd_cd -d'
alias n='fasd -f -e nvim'

bindkey '^X^A' fasd-complete    # C-x C-a to do fasd-complete (files and directories)
bindkey '^X^F' fasd-complete-f  # C-x C-f to do fasd-complete-f (only files)
bindkey '^X^D' fasd-complete-d  # C-x C-d to do fasd-complete-d (only directories)

# todo.txt
alias t='/home/mike/src/todo.txt_cli-2.9/todo.sh -d /home/mike/todo.txt_cli-2.9/todo.cfg'
alias ta="/home/mike/src/todo.txt_cli-2.9/todo.sh -d /home/mike/todo.txt_cli-2.9/todo.cfg add '$*'"
alias tc="/home/mike/src/todo.txt_cli-2.9/todo.sh -d /home/mike/todo.txt_cli-2.9/todo.cfg do '$*'"
alias tls='t ls'
# }}}
