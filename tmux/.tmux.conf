# Settings {{{

# General
# set-window-option -g utf8 on
new-session -n $HOST

# use true colors
if-shell "uname | grep -q Darwin" \
 "set -g default-terminal 'screen-256color'"
if-shell "uname | grep -q Darwin" \
 "set -ga terminal-overrides ',screen-256color:Tc'"
if-shell "uname | grep -q Linux" \
"set-option -g default-terminal 'screen-256color'"
if-shell "uname | grep -q Linux" \
    "set-option -g default-shell /usr/bin/fish"
if-shell "uname | grep -q Darwin" \
    "set-option -g default-shell /usr/local/bin/fish"
set-option -g history-limit 10000
set-option -g escape-time 1
set-option -g renumber-windows on
set-option -g escape-time 20
if-shell "uname | grep -q Linux" \
    "set-option -g set-remain-on-exit off"
if-shell "uname | grep -q Darwin" \
     "set-hook -g session-created 'set remain-on-exit off'"
set -g mouse on

# Configure window
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g base-index 1
set-window-option -g pane-base-index 1

set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none
set-window-option -g monitor-activity off
set -g focus-events on

# }}}


# Bindings {{{

# Remap prefix from 'C-b' to 'C-a'
unbind C-a
set-option -g prefix C-a
bind-key C-a send-prefix

# Reload config file
bind-key r source-file ~/.tmux.conf

# Next layout
bind-key c-t next-layout

# Toggle tmux status
bind-key c-v set status

# Fix Emacs bindings
bind-key c-l send-keys 'c-l'
bind-key c-k send-keys 'c-k'

# Splits and Windows same directory
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"
bind-key m-c new-window -d "#{pane_current_path}"

bind-key -r m-h resize-pane -L 5 \; display-message "Resize left"
bind-key -r m-j resize-pane -D 5 \; display-message "Resize down"
bind-key -r m-k resize-pane -U 5 \; display-message "Resize up"
bind-key -r m-l resize-pane -R 5 \; display-message "Resize right"

# Switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10

# Change current pane to next window
bind-key ! join-pane -t :1
bind-key @ join-pane -t :2
bind-key '#' join-pane -t :4
bind-key '$' join-pane -t :4
# bind-key '%' join-pane -t :5
bind-key '^' join-pane -t :6
bind-key '&' join-pane -t :7
bind-key '*' join-pane -t :8
bind-key '(' join-pane -t :9
bind-key ')' join-pane -t :10

# }}}


# Copy Mode {{{

unbind [
unbind p
bind-key Escape copy-mode
bind-key b list-buffers  # list paster buffers
bind-key p paste-buffer
bind-key P choose-buffer # choose which buffer to paste from

if-shell "uname | grep -q Linux" \
    "bind -t vi-copy y copy-pipe 'xclip -sel clip -i'"
if-shell "uname | grep -q Linux" \
    "set-option -g default-shell /usr/bin/fish"
if-shell "uname | grep -q Linux" \
    "bind-key -t vi-copy Escape cancel; bind-key -t vi-copy C-v rectangle-toggle;"
if-shell "uname | grep -q Linux" \
    "bind-key -t vi-copy 'v' begin-selection; bind-key -t vi-copy 'y' copy-selection;"
if-shell "uname | grep -q Linux" \
    "bind-key -t vi-copy H start-of-line; bind-key -t vi-copy L end-of-line;"
if-shell "uname | grep -q Linux" \
    "bind-key -t emacs-copy h cursor-left; bind-key -t emacs-copy j cursor-down;"
if-shell "uname | grep -q Linux" \
    "bind-key -t emacs-copy k cursor-up; bind-key -t emacs-copy l cursor-right"

if-shell "uname | grep -q Darwin" \
    "bind-key -T copy-mode h send -X cursor-left;"
if-shell "uname | grep -q Darwin" \
    "bind-key -T copy-mode j send -X cursor-down;"
if-shell "uname | grep -q Darwin" \
    "bind-key -T copy-mode k send -X cursor-up;"
if-shell "uname | grep -q Darwin" \
    "bind-key -T copy-mode l send -X cursor-right;"
if-shell "uname | grep -q Darwin" \
    "bind-key -T copy-mode H send -X start-of-line;"
if-shell "uname | grep -q Darwin" \
    "bind-key -T copy-mode L send -X end-of-line;"

# }}}


# Navigation {{{

bind-key h select-pane -L
bind-key j select-pane -D
bind-key l select-pane -R
bind-key k select-pane -U

# Faster switching between windows
bind-key n next-window
bind-key p previous-window

# Rotate panes
bind-key C-t rotate-window

# Change zoom pane binding
unbind z
bind-key -n C-Space resize-pane -Z

# Change split layout
# bind-key and space
# leader + space in vim

# }}}


# Status line {{{

set-option -g status-position bottom
set-option -g status-bg colour234
set-option -g status-fg colour137
set-option -g status-justify left
# set-option -g status-attr none
set-option -g status-left '#[fg=colour16,bg=colour119,bold]  #S  '
set-option -g status-left-length 20
set-option -g status-right-length 50

# set-window-option -g window-status-fg colour63
# set-window-option -g window-status-bg colour234
# set-window-option -g window-status-attr dim
set-window-option -g window-status-format '  #I#[fg=colour234]:#[fg=colour234]#W#[fg=colour110]#F '

# set-window-option -g window-status-current-fg colour63
# set-window-option -g window-status-current-bg colour234
# set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-format '  #I#[fg=colour234]:#[fg=colour255]#W#[fg=colour63]#F '

set -g status-right "#{battery_percentage} | #[fg=cyan]%d %b %R"

# }}}


# Plugins {{{

# List of plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'
set-option -g @plugin "jlipps/tmux-safekill"
set-option -g @plugin 'tmux-plugins/tmux-yank'
set-option -g @plugin 'tmux-plugins/tmux-copycat'
set-option -g @plugin 'tmux-plugins/tmux-open'
set-option -g @plugin 'tmux-plugins/tmux-battery'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# Settings
set-option -g @continuum-restore 'on'
set-option -g @resurrect-strategy-nvim 'session'
set-option -g @resurrect-capture-pane-contents 'on'

# }}}
