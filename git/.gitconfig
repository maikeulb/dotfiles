[core]
	editor = nvim
	excludesfile = ~/.gitignore-global
	pager = less -r

[user]
	name = Michael Barnes
	email = michael.sergio.barnes@gmail.com

[push]
	default = tracking

[init]
	templatedir = ~/.git-templates

[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = red

[branch]
	autosetuprebase = always

[merge]
	tool = vimdiff

[mergetool]
	prompt = true

[mergetool "vimdiff"]
	cmd = nvim -d $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'

[difftool]
	prompt = false

[diff]
	compactionHeuristic = true
	tool = vimdiff

[rerere]
	enabled = true

[include]
	path = ~/.githubconfig

[alias]
	# abbrevs
	ad = add
	ap = add -p
	ci = commit
	cp = cherry-pick
	cl = clean
	clf = clean -df
	clo = clone
	br = branch
	co = checkout
	pl = pull
	pr = pull --rebase
	ps = push
	fe = fetch
	df = diff
	dc = diff --cached
	gdf = difftool
	gdfc = difftool --cached
	mg = merge
	gmg = mergetool
	r = reset
	rs = reset --soft
	rh = reset --hard
	st = status -sb
	lp = log -p
	sl = stash list
	sa = stash apply
	ss = stash save

	# status
	bl = branch -av
	vu = ls-files -u                    #view unmerged files
	ls-ignored = ls-files --exclude-standard --ignored --others
	ls = ls-files

	# diffing
	d1 = diff HEAD^1..
	dfc = diff --cached
	wd1 = diff --word-diff=color HEAD^1.. #word-diff from last commit
	wdf = diff --word-diff=color          #word-diff
	wdfc = diff --word-diff=color --cached # word-diff cached
	unmerged = diff --name-only --diff-filter=U
	prestage = diff -w --word-diff=color
	precommit = diff --cached -w --word-diff=color --word-diff-regex='[^[:space:]<>]+'

	# logs
	ld = log --oneline --decorate
	l1 = log --max-count=1                   # last commit
	l5 = log --max-count=5                   # last 5 commits
	l5o = log --pretty=oneline --max-count=5 # last 5 commits onelined
	slog = log --pretty=format:'%Cred%h%Creset %C(yellow)%d%Creset | %s %Cgreen%cr%Creset %C(bold blue)[%an]%Creset' --date=relative --no-merges --abbrev-commit
	stats = shortlog -s -n -e --no-merges
	tree = log --graph --pretty=oneline --decorate --color --abbrev-commit
	tree-all = log --graph --pretty=oneline --decorate --color --abbrev-commit --all
	pc = log -p HEAD@{1}..  # pulled changes

	# undoing things
	unstage = reset -q HEAD --
	undo = reset --hard '@{1}'
	discard = checkout --
	uncommit = reset --mixed HEAD~
	nevermind = !git reset --hard HEAD && git clean -d -f

	# showing things
	branches = branch -a
	tags = tag
	lt = describe --tags --abbrev=0

	# new commands
	in = incoming
	out = outgoing
	addr = addremove
	untrack = rm -r --cached
	tidy = rebase -i @{upstream}..
	springcleaning = for-each-ref --sort=-committerdate --format='%(refname:short) %(committerdate:short)'
	zip = !git archive -o $(basename $(readlink -e .)).zip HEAD
	f = !git ls-files | grep -i
	fixup = !GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
	cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d"

	# amending
	amendc = commit --amend -C HEAD
	amend = commit --amend

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22

[diff-so-fancy]
	stripLeadingSymbols = true

[secrets]
	patterns = password\\s*=\\s*.+
	patterns = [A-Z0-9]{64}

[format]
	pretty = oneline

[rebase]
	autosquash = true
